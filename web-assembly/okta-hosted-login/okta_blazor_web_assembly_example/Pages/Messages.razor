@page "/messages"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject IConfiguration Configuration
@inject IHttpClientFactory ClientFactory
@attribute [Authorize]

<h1>Server messages</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (serverMessages == null)
{
    <p><em>Loading...</em></p> }
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Text</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var message in serverMessages.Messages)
        {
            <tr>
                <td>@message.Date.ToShortDateString()</td>
                <td>@message.Text</td>
            </tr>
        }
        </tbody>
    </table>}

@code {
    
    public class ServerMessage
    {
        public DateTime Date { get; set; }

        public string Text { get; set; }
    }

    public class ServerMessages
    {
        public IList<ServerMessage> Messages { get; set; }
    }

    private ServerMessages serverMessages;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            var httpClient = ClientFactory.CreateClient("BlazorClient.ServerApi");
            serverMessages = await httpClient.GetFromJsonAsync<ServerMessages>(Configuration["ServerApi:MessagesEndpoint"]);
        }

        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    } 
}
