version: 2.1

orbs:
  general-platform-helpers: okta/general-platform-helpers@1.9
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@5.1

jobs:
  reversing-labs:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    environment:
      CIRCLE_REPOSITORY_URL: https://github.com/okta/samples-blazor.git
    steps:
      - checkout
  
      - run: dotnet --version

      - run: 
          name: build Binary to scan
          command: |
            dotnet build ./server-side/okta-hosted-login/okta-blazor-server-side-example.sln &&
            dotnet build ./web-assembly/okta-hosted-login/okta_blazor_web_assembly_example.sln 

      # Necessary to Install rl wrapper and tooling
      - run:
          name: Install prerequisites (git, openssh, python, curl, sudo)
          command: |
            apt-get update
            apt-get install -y git openssh-client python3 python3-pip curl sudo ca-certificates
            python3 -m pip install --user --upgrade pip
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
  
      # Download the scanner from Okta Security
      - run:
          name: Download Reverse Labs Scanner
          command: |
            curl https://dso-resources.oktasecurity.com/scanner \
              -H "x-api-key: $DSO_RLSECURE_TOKEN" \
              --output rl_wrapper-0.0.2+35ababa-py3-none-any.whl
      # Install the wrapper that was downloaded
      - run:
          name: Install RL Wrapper
          command: |
            python3 -m pip install --user ./rl_wrapper-0.0.2+35ababa-py3-none-any.whl
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
  
      # Setup the AWS profile
      - aws-cli/setup:
          profile_name: default
          role_arn: $AWS_ARN
          region: us-east-1
  
      # Get the credentials and save to env
      - run: >-
          eval "$(aws configure export-credentials --profile default --format env)" 2> /dev/null
  
      # Run the wrapper, do not change anything here
      - run:
          name: Run Reversing Labs Wrapper Scanner
          command: |
            rl-wrapper \
              --artifact ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME} \
              --name $CIRCLE_PROJECT_REPONAME\
              --version $CIRCLE_SHA1\
              --repository $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              --commit $CIRCLE_SHA1 \
              --build-env "circleci" \
              --suppress_output

  semgrep-scan:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    environment:
      CIRCLE_REPOSITORY_URL: https://github.com/okta/samples-blazor.git
    steps:
      - checkout
      - run:
          name: Install prerequisites (git, openssh, python, pip, curl)
          command: |
            apt-get update
            apt-get install -y git openssh-client python3 python3-pip curl ca-certificates
            python3 -m pip install --user --upgrade pip
            python3 -m pip install --user semgrep
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
      - run:
          name: Run Semgrep scan (non-blocking)
          command: |
            semgrep --version
            # Use auto rules; do not fail build on findings
            semgrep --config=auto --exclude .git || true

workflows:
  version: 2
  "Malware Scanner":
    jobs:
      - reversing-labs:
          context:
            - static-analysis
  # See OKTA-624620
  semgrep:
    jobs:
      - semgrep-scan
